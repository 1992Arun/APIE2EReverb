[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 793747700,
              "status": "passed"
            },
            "line": 6,
            "name": "I added baseuri and RequestSpec",
            "match": {
              "location": "StepDefinition.i_added_baseuri_and_RequestSpec()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2025-02-16T07:55:29.663Z",
        "line": 27,
        "name": "Testing the PUT request method",
        "description": "",
        "id": "testing-all-api-request-methods-of-reverb-apis;testing-the-put-request-method",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 221200,
              "status": "passed"
            },
            "line": 29,
            "name": "I add the \"PUT\" request body",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 10
                }
              ],
              "location": "StepDefinition.i_add_the_request_body(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7748001000,
              "status": "passed"
            },
            "line": 31,
            "name": "I send the \"PUT\" request with \"updateListing\" endpoint",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 11
                },
                {
                  "val": "\"updateListing\"",
                  "offset": 30
                }
              ],
              "location": "StepDefinition.i_send_the_request_with_endpoint(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: 1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c404\u003e.\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:93)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$spec(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy:76)\r\n\tat io.restassured.internal.ValidatableResponseImpl.spec(ValidatableResponseImpl.groovy)\r\n\tat org.step.StepDefinition.i_verify_request_response_is(StepDefinition.java:171)\r\n\tat âœ½.I verify \"PUT\" request response is 200(file:src/test/resources/APIFeature.feature:33)\r\n",
              "duration": 34518700,
              "status": "failed"
            },
            "line": 33,
            "name": "I verify \"PUT\" request response is 200",
            "match": {
              "arguments": [
                {
                  "val": "\"PUT\"",
                  "offset": 9
                },
                {
                  "val": "200",
                  "offset": 35
                }
              ],
              "location": "StepDefinition.i_verify_request_response_is(String,Integer)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@E2E"
          },
          {
            "name": "@put"
          }
        ]
      }
    ],
    "name": "Testing all API request methods of Reverb APIs",
    "description": "",
    "id": "testing-all-api-request-methods-of-reverb-apis",
    "keyword": "Feature",
    "uri": "file:src/test/resources/APIFeature.feature",
    "tags": [
      {
        "name": "@E2E",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]